	Key aesKey;
	Cipher cipher;
	byte[] encrypted;



		try {
			aesKey = new SecretKeySpec(key.getBytes(), "AES");
		    cipher = Cipher.getInstance("AES");
			
		} catch (Exception e) {
			e.printStackTrace();
		}





	public void encrypt() { // TODO Encryption
		
				try {

					// 128 bit key

					// Create key and cipher

					// encrypt the text
					scoreString = Integer.toString(highScore);
					cipher.init(Cipher.ENCRYPT_MODE, aesKey);
					encrypted = cipher.doFinal(scoreString.getBytes());
					System.out.println(new String("Encrypted score: " + encrypted));

					// decrypt the text
					/*
					 * cipher.init(Cipher.DECRYPT_MODE, aesKey); String
					 * decrypted = new String(cipher.doFinal(encrypted));
					 * System.out.println(decrypted);
					 */

				} catch (Exception e) {
					e.printStackTrace();
				}


	}

	public void decrypt() { // TODO Decryption


				try {

					String text = scoreString;
					String key = "Bar12345Bar12345"; // 128 bit key
					System.out.println(text);

					// Create key and cipher
					Key aesKey = new SecretKeySpec(key.getBytes(), "AES");
					Cipher cipher = Cipher.getInstance("AES");

					// encrypt the text
					/* cipher.init(Cipher.ENCRYPT_MODE, aesKey); */
					// encrypted = cipher.doFinal(text.getBytes());
					// System.out.println(new String(encrypted));

					// decrypt the text
					cipher.init(Cipher.DECRYPT_MODE, aesKey);
					String decrypted = new String(cipher.doFinal(encrypted));
					System.out.println(decrypted);

				} catch (Exception e) {
					e.printStackTrace();
				}

	}
